// Basic Forms
// http://localhost:3000/isolated/exercise/06.js

import * as React from 'react'

function UsernameForm({ onSubmitUsername }) {
    // 游냗 add a submit event handler here (`handleSubmit`).
    // 游눯 Make sure to accept the `event` as an argument and call
    // `event.preventDefault()` to prevent the default behavior of form submit
    // events (which refreshes the page).
    //
    // 游냗 get the value from the username input (using whichever method
    // you prefer from the options mentioned in the instructions)
    // 游눯 For example: event.target.elements[0].value
    // 游냗 Call `onSubmitUsername` with the value of the input

    // 游냗 add the onSubmit handler to the <form> below

    // 游냗 make sure to associate the label to the input.
    // to do so, set the value of 'htmlFor' prop of the label to the id of input

    // Criando uma ref, um recurso do React para acessar o conte칰do
    // de elementos de formul치rios
    const usernameEl = React.useRef()

    // Criar uma vari치vel de estado do React 
    // Uma vari치vel de estado mant칠m uma informa칞칚o mesmo que o conte칰do da p치gina
    // seja atualizado
    // para Para ler o conte칰do da vari치vel de estado, podemos acess치-la diretamente.
    // No entanto, para alterar seu conte칰do, usamos uma fun칞칚o set.
    //
    // error -> vari치vel de estado
    // setError -> fun칞칚o de atualiza칞칚o da vari치vel de estado
    // A fun칞칚o useState aceita um par칙metro que 칠 o VALOR INICIAL da vari치vel
    // de estado. ou seja, nesse caso, error tem um valor inicial de string vazia

    const [msg, setMsg] = React.useState('')
    const [username, setUsername] = React.useState('')

    function handleSubmit(event) {
        event.preventDefault()  // Previne o recarregamento do formul치rio
        //const username = document.getElementById('username').value
        //const username = document.querySelector('#username').value
        const username = usernameEl.current.value
        onSubmitUsername(username)
    }


    function handleChange(event) {
        //  Capturando o valor do input
        const val = event.target.value

        setUsername(val.toLowerCase())

        // O input ser치 v치lido se o seu conte칰do for id칡ntico
        // ao pr칩prio conte칰do em min칰sculas

        // const isValid = (val === val.toLowerCase())

        // setMsg(isValid ? '' : 'O valor informado deve estar em min칰scula')
    }


    return (
        <form onSubmit={handleSubmit}>
            <div>
                <label>Username:</label>
                {/* Associando o ref usernameEl ao input */}
                <input ref={usernameEl} id="username" type="text" onChange={handleChange} value={username} />
            </div>
            <div style={{ color: 'red' }}>{msg}</div>
            <button type="submit">Submit</button>
        </form>
    )

}

function App() {
    const onSubmitUsername = username => alert(`You entered: ${username}`)
    return <UsernameForm onSubmitUsername={onSubmitUsername} />
}

export default App
